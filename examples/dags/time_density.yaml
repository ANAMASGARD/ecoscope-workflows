get_subjectgroup_observations:
  server:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='URL for EarthRanger API'))
  username:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='EarthRanger username'))
  password:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='EarthRanger password'))
  tcp_limit:   # (<class 'int'>, FieldInfo(annotation=NoneType, required=True, description='TCP limit for EarthRanger API requests'))
  sub_page_size:   # (<class 'int'>, FieldInfo(annotation=NoneType, required=True, description='Sub page size for EarthRanger API requests'))
  subject_group_name:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='Name of EarthRanger Subject'))
  include_inactive:   # (<class 'bool'>, FieldInfo(annotation=NoneType, required=True, description='Whether or not to include inactive subjects'))
  since:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='Start date'))
  until:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='End date'))
  return:   # (pandera.typing.pandas.DataFrame[ecoscope_workflows.tasks.python.io.SubjectGroupObservationsGDFSchema], WithJsonSchema(json_schema={'type': 'ecoscope.distributed.types.DataFrame'}, mode=None))
process_relocations:
  observations:   # (pandera.typing.pandas.DataFrame[ecoscope_workflows.tasks.python.io.SubjectGroupObservationsGDFSchema], WithJsonSchema(json_schema={'type': 'ecoscope.distributed.types.DataFrame'}, mode=None))
  filter_point_coords:   # (list[list[float]], FieldInfo(annotation=NoneType, required=True))
  relocs_columns:   # (list[str], FieldInfo(annotation=NoneType, required=True))
  return:   # (pandera.typing.pandas.DataFrame[ecoscope_workflows.tasks.python.preprocessing.RelocationsGDFSchema], WithJsonSchema(json_schema={'type': 'ecoscope.distributed.types.DataFrame'}, mode=None))
